
* Convertir los digitos a binario en positivo.

"H">>n
where n is the number of times we are shifting

***********************************
| 128| 64| 32| 16|  8|  4|  2|  1 |
|   0|  1|  0|  0|  1|  0|  0|  0 |
***********************************
|   0|  0|  0|  0|  0|  0|  0|  0 |  // shifting by 7 sums up to 0
|   0|  0|  0|  0|  0|  0|  0|  1 |  // shifting by 6 sums up to 1
|   0|  0|  0|  0|  0|  0|  1|  0 |  // shifting by 5 sums up to 2
|   0|  0|  0|  0|  0|  1|  0|  0 |  // shifting by 4 sums up to 4
|   0|  0|  0|  0|  1|  0|  0|  1 |  // shifting by 3 sums up to 9
|   0|  0|  0|  1|  0|  0|  1|  0 |  // shifting by 2 sums up to 18
|   0|  0|  1|  0|  0|  1|  0|  0 |  // shifting by 1 sums up to 36
|   0|  1|  0|  0|  1|  0|  0|  0 |  // shifting by 0 sums up to 72
***********************************

From top down, you would realise that when you line up the rightmost value
it will be 01001000, which is the binary value of our H.It is this right-most 
value we will be saving everytime we shift

* Convertir los numeros a binario (negativos)

For example let's say we wanna convert -16 to binary
Step 1: We would find the binary value of +ve 16 -> 00010000
Step 2: We flip the digits to the opposite of what it was -> 11101111
Step 3: Then we would add 1. Note: 1 + 1 = 10, you will leave zero 
        and carry the one, while 1 + 1 + 1 = 11, leave 1 and carry 1
        therefore we will get 11110000

-128| 64| 32| 16|  8|  4|  2|  1|
   1|  1|  1|  1|  0|  0|  0|  0|
*********************************
The left most is is negative 128
Therefore, -128 + 64 + 32 + 16 = -16

Note: when right shifting you don't touch the bit at -128, and
you replace the void shifted with 1

***********************************
|-128| 64| 32| 16|  8|  4|  2|  1 |
|   1|  1|  1|  1|  0|  0|  0|  0 |
***********************************
|   1|  1|  1|  1|  1|  1|  1|  1 |  // shifting by 7 sums up to -1  (-128+64+32+16+8+4+2+1)
|   1|  1|  1|  1|  1|  1|  1|  1 |  // shifting by 6 sums up to -1  (-128+64+32+16+8+4+2+1)
|   1|  1|  1|  1|  1|  1|  1|  1 |  // shifting by 5 sums up to -1  (-128+64+32+16+8+4+2+1)
|   1|  1|  1|  1|  1|  1|  1|  1 |  // shifting by 4 sums up to -1  (-128+64+32+16+8+4+2+1)
|   1|  1|  1|  1|  1|  1|  1|  0 |  // shifting by 3 sums up to -2  (-128+64+32+16+8+4+2)
|   1|  1|  1|  1|  1|  1|  0|  0 |  // shifting by 2 sums up to -4  (-128+64+32+16+8+4)
|   1|  1|  1|  1|  1|  0|  0|  0 |  // shifting by 1 sums up to -8  (-128+64+32+16+8)
|   1|  1|  1|  1|  0|  0|  0|  0 |  // shifting by 0 sums up to -16 (-128+64+32+16)
***********************************

From top down, you would realise that when you line up the rightmost value
it will be 11110000, which is the binary value of -16.

